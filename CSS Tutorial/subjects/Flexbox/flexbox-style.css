@import url('https://fonts.googleapis.com/css2?family=Open+Sans&display=swap');

:root {
    --outer-color: #000;
    --inner-color: #00f;
    --box-color: #fff;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Open Sans', sans-serif;
    min-height: 100vh;
    padding: 20px;
}

/*
- \justify-content\ works in tandem with \display: flex\
+ \space-around\ will put the same space around every element sort of like a margin
This means that the outside space will be smaller because it's not doubling up due to its neighbours space value.
+ \space-between\ pushes rows / elements apart as much as possible within the current container.
+ \space-evenly\ will distribute the space evenly across all elements so it will look like
+ \space-around\ but with the same space on the outsides of the rows elements.
 */

.container {
    max-width: 800px;
    min-height: 400px;
    margin-inline: auto;
    border: 1px solid #000;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    gap: 1rem;
    flex-flow: row wrap;
    align-content: space-evenly;
}

/*
- \flex-grow\ and \flex-shrink\ allow you to set which elements grow or shrink more depending on screen size.
It's a "unitless" value, you just enter a relative value to show which one grows / shrinks more
- \flex-basis\ is sort of the width setting inside a flexbox
- \flex\ shorthand includes grow, shrink and basis respectively.
 */

.box {
    min-width: 100px;
    height: 100px;
    background-color: #000;
    color: #fff;
    font-size: 2rem;
    padding: 0.5rem;
    display: flex;
    justify-content: center;
    align-items: center;
    flex: 1 1 150px;
}

/*
- \order\ is another unitless value so it is relative to other manually set values.
Automatically set values will always be less than a 1 and more than -1.
Definitely can be a bit challenging with \flex wrap\ to get right.
 */

.box:nth-child(2) {
    flex: 2 2 150px;
    order: 1;
}

footer {
    text-align: center;
}