@import url('https://fonts.googleapis.com/css2?family=Open+Sans&display=swap');

:root {
    --outer-color: #000;
    --inner-color: #00f;
    --box-color: #fff;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Open Sans', sans-serif;
    font-size: 1.5rem;
    min-height: 200vh;
}

.outer-container {
    border: 3px dashed #000;
    width: 75vw;
    height: 85vh;
    margin: 40px auto;
    position: relative;
}

.inner-container {
    border: 2px solid #00f;
    width: 40vw;
    height: 50vh;
    margin: 200px auto;
}

.box {
    width: 150px;
    height: 150px;
    color: white;
    padding: 1rem;
}

/*
Absolute position needs at least one input to take effect.
Absolute position needs a relative parent. If there is none, it will take the browser window as its reference.
You can use \position: relative\ on any parent class to constrain the \position: absolute\ element.
In this example you could use either the inner or outer container.
 */

.absolute {
    background-color: #00f;
    position: absolute;
    top: 0;
    left: -10000px;
}

/*
Relative position is always going to be relative to its parent container.
 */

.relative {
    background-color: #f00;
    position: relative;
    top: 300px;
    left: 500px;
}

/*
Fixed position is a fixed position on the screen. When you scroll, that element is going to stay in the same position relative to your screen.
If any elements have been added later in the structure, they will cover this element. 
You can play around with this by changing the \z-index\ in the css. 
**Notice as well that \z-index: 1\ will set it on top of everything that is set automatically. You only need to go higher than 1 if you set other elements manually as well.**
 */

.fixed {
    background-color: green;
    position: fixed;
    top: 100px
}

/*
Sticky will behave similar to the fixed position element except it is constrained within its parent. 
If the parent scrolls off the screen the sticky element will be at the lowest point on that parent and also scroll off the screen with it.
 */

.sticky {
    background-color: #000;
    position: sticky;
    top: 0;
}

/*=======================================================================*/
/* Bottom section of the HTML */

/*The scroll behavior will take effect when you click a link that navigates to a different part of the webpage.*/
html {
    scroll-behavior: smooth;
}

/*By setting the vh to 100, we have given each section a full screen which feels like its own page to the reader.*/
section {
    height: 100vh;
}

.blue {
    background-color: #00f;
}

.red {
    background-color: #f00;
}

.green {
    background-color: green;
}

header,
footer {
    color: #fff;
    text-align: center;
    height: 100px;
}

header {
    position: sticky;
    top: 0;
    font-size: 5rem;
}

footer {
    background-color: #000;
    position: sticky;
    bottom: 0;
    width: 100%;
    font-size: 3rem;
}

a {
    color: hsl(350, 100%, 80%);
}


a:visited {
    color: #fff;
}

a:hover,
a:focus {
    color: hsl(350, 100%, 60%);
}

.social {
    background-color: royalblue;
    position: fixed;
    color: #fff;
    font-size: inherit;
    top: 30%;
    z-index: 1;
}