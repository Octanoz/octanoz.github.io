@import url('https://fonts.googleapis.com/css2?family=Ysabeau&display=swap');

/* RESET */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/*
We're entering the dimensions of the img in the HTML so the browser understands how much space to reserve for it.
You can still style it in the CSS however you want but that will eliminate the weird re-organizing when images load in or can't be found.
When you do this you will need to have a setting for both width and height in the CSS 
as well, otherwise it will just take the value that was given in the HTML.
 */

img {
    display: block;
    max-width: 100%;
    height: auto;
}

/* UTILITY CLASSES */

.nowrap {
    white-space: nowrap;
}

/* GENERAL STYLES */

/*
\scroll-behavior\ to make the page actually scroll to another section instead of instantaneously popping you down there.
Because we have set \scroll-margin-top\ in the .card class we do not see any of the cards get overlapped by the header section.
 */

html {
    scroll-behavior: smooth;
}

body {
    font: 1.5rem "Ysabeau", sans-serif;
    min-height: 100vh;
    background-color: #475569;
    background-image: radial-gradient(whitesmoke, #475569);
    display: flex;
    flex-direction: column;
}

/*
\font\ is shorthand for \font-size\ and \font-family\
 */

header,
footer {
    position: sticky;
    background-color: #1e293b;
    color: whitesmoke;
    text-align: center;
}


header {
    top: 0;
}

nav {
    background-color: white;
    padding: 0.5rem;
    border-bottom: 2px solid black;
    font-weight: bolder;
    display: flex;
    justify-content: space-evenly;
}

nav a,
nav a:visited {
    color: #000;
}

nav a:hover,
nav a:focus {
    color: hsla(0, 0%, 20%, 0.6);
}

main {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1.5rem;
    padding: 1rem;
}

footer {
    bottom: 0;
}

/* || PROFILE CARD || */

/*
\scroll-margin-top\ is very important here to prevent the card from being overlapped by the header.
The value for this seems to be decided by Eyeball Mk. 1
 */

.card {
    scroll-margin-top: 8rem;
    width: min(100%, 350px);
    background-color: #cbd5e1;
    border: 2px solid #000;
    border-radius: 15px;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.card figure {
    display: flex;
    flex-flow: column nowrap;
}

.card img {
    border: 5px double #333;
    border-radius: 50%;
}

.card figcaption {
    font-weight: bolder;
    font-size: 2rem;
    margin: 1rem;
    text-align: center;
}

/* MEDIA QUERIES */

/* || SMALL || */
@media screen and (min-width: 767px) {
    main {
        justify-content: center;
        flex-flow: row wrap;
        padding: 1rem;
    }

    .card {
        width: min(100%, 400px);
    }

    .card:last-child {
        order: -1
    }
}

/* || MEDIUM || */
@media screen and (min-width: 768px) {
    nav {
        display: none;
    }

    .card {
        width: min(100%, 325px);
    }

    .card figure {
        flex-flow: column-reverse;
    }

    .card p {
        margin-top: 1rem;
    }
}

/* || LARGE || */
@media screen and (min-width: 992px) {
    .card {
        width: min(100%, 400px);
    }

    .card:nth-child(2) {
        order: -1
    }
}

/* || EXTRA LARGE || */
@media screen and (min-width: 1200px) {
    .card {
        width: min(33% - 1rem, 500px);
    }

}

/* || MOBILE DEVICE LANDSCAPE || */
@media screen and (max-height: 425px) and (min-aspect-ratio: 7/4) {
    h1 {
        font-size: 1.5rem;
    }

    nav {
        display: none;
    }

    main {
        flex-flow: row nowrap;
        justify-content: space-evenly;
        align-items: stretch;
    }

    .card {
        width: min(33% - 0.25rem, 200px);
    }

    .card figcaption,
    .card p {
        font-size: 1.25rem;
    }
}

/*
Setting the aspect ratio is a more sure way to trigger the correct setting as orientation would be
 */

/*
Syntax of a media query:
@media \media type\ and (condition: breakpoint) {
    CSS rules
}

Generally speaking you'll be designing from the smallest screen to the largest screen.
Therefore using settings like min-width is more likely than max-width
 */